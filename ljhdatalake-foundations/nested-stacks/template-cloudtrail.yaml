AWSTemplateFormatVersion: 2010-09-09
Description: Enabling CloudTrail

Parameters:
  pApplicationName:
    Type: String
  pCloudWatchLogsRetentionInDays:
    Description: The number of days log events are kept in CloudWatch Logs
    Type: Number
    Default: 30
    AllowedValues:
      [
        1,
        3,
        5,
        7,
        14,
        30,
        60,
        90,
        120,
        150,
        180,
        365,
        400,
        545,
        731,
        1827,
        3653,
      ]
  pCustomBucketPrefix:
    Type: String
  pEnvironment:
    Type: String
  pExternalTrailBucket:
    Description: Optional The name of the Amazon S3 bucket where CloudTrail publishes log files. If empty, the Amazon S3 bucket is created for you.
    Type: String
    Default: ""
  pKMSKeyId:
    Type: String
  pLogFilePrefix:
    Description: Optional The log file prefix.
    Type: String
    Default: ""
  pOrganizationName:
    Type: String
  pS3DataEvents:
    Description: Record data events of all S3 buckets
    Type: String
    Default: "false"
    AllowedValues:
      - "true"
      - "false"

Conditions:
  InternalBucket: !Equals [!Ref pExternalTrailBucket, ""]
  ExternalBucket: !Not [!Equals [!Ref pExternalTrailBucket, ""]]
  HasLogFilePrefix: !Not [!Equals [!Ref pLogFilePrefix, ""]]
  IsS3DataEvents: !Equals [!Ref pS3DataEvents, "true"]
  UseCustomBucketPrefix: !Not [!Equals [!Ref pCustomBucketPrefix, "ljhdatalake"]]

Resources:
  rTrailBucket:
    Condition: InternalBucket
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        !If [
          UseCustomBucketPrefix,
          !Sub "${pCustomBucketPrefix}-cloudtrail",
          !Sub "${pOrganizationName}-${pApplicationName}-${pEnvironment}-${AWS::Region}-${AWS::AccountId}-cloudtrail",
        ]
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True

  rTrailBucketPolicy:
    Condition: InternalBucket
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref rTrailBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AWSCloudTrailAclCheck
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: s3:GetBucketAcl
            Resource: !Sub arn:aws:s3:::${rTrailBucket}
          - Sid: AWSCloudTrailWrite
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: s3:PutObject
            Resource:
              !If [
                HasLogFilePrefix,
                !Sub "arn:aws:s3:::${rTrailBucket}/${pLogFilePrefix}/AWSLogs/${AWS::AccountId}/*",
                !Sub "arn:aws:s3:::${rTrailBucket}/AWSLogs/${AWS::AccountId}/*",
              ]
            Condition:
              StringEquals:
                s3:x-amz-acl: bucket-owner-full-control
          - Sid: AllowSSLRequestsOnly
            Effect: Deny
            Principal: "*"
            Action: s3:*
            Resource:
              - !Sub arn:aws:s3:::${rTrailBucket}/*
              - !Sub arn:aws:s3:::${rTrailBucket}
            Condition:
              Bool:
                aws:SecureTransport: False

  rTrailLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: !Ref pCloudWatchLogsRetentionInDays

  rTrailLogGroupRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AssumeRole1
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: cloudtrail-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !GetAtt rTrailLogGroup.Arn

  rTrail:
    Condition: InternalBucket
    DependsOn:
      - rTrailBucketPolicy
    Type: AWS::CloudTrail::Trail
    Properties:
      IncludeGlobalServiceEvents: true
      IsLogging: true
      IsMultiRegionTrail: false
      EventSelectors:
        !If [
          IsS3DataEvents,
          [
            {
              DataResources:
                [{ Type: "AWS::S3::Object", Values: ["arn:aws:s3:::"] }],
              IncludeManagementEvents: true,
              ReadWriteType: All,
            },
          ],
          !Ref "AWS::NoValue",
        ]
      KMSKeyId: !Ref pKMSKeyId
      S3BucketName: !Ref rTrailBucket
      S3KeyPrefix: !Ref pLogFilePrefix
      EnableLogFileValidation: true
      CloudWatchLogsLogGroupArn: !GetAtt rTrailLogGroup.Arn
      CloudWatchLogsRoleArn: !GetAtt rTrailLogGroupRole.Arn

  rExternalTrail:
    Condition: ExternalBucket
    Type: AWS::CloudTrail::Trail
    Properties:
      IncludeGlobalServiceEvents: true
      IsLogging: true
      IsMultiRegionTrail: true
      EventSelectors:
        !If [
          IsS3DataEvents,
          [
            {
              DataResources:
                [{ Type: "AWS::S3::Object", Values: ["arn:aws:s3:::"] }],
              IncludeManagementEvents: true,
              ReadWriteType: All,
            },
          ],
          !Ref "AWS::NoValue",
        ]
      S3BucketName: !Ref pExternalTrailBucket
      S3KeyPrefix: !Ref pLogFilePrefix
      EnableLogFileValidation: true
      CloudWatchLogsLogGroupArn: !GetAtt rTrailLogGroup.Arn
      CloudWatchLogsRoleArn: !GetAtt rTrailLogGroupRole.Arn

  rTrailBucketSsm:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /LJHDATALAKE/S3/CloudTrailBucket
      Type: String
      Value: !If [InternalBucket, !Ref rTrailBucket, !Ref pExternalTrailBucket]
      Description: Name of the CloudTrail S3 bucket
