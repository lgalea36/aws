{
  "Comment": "Simple pseudo flow",
  "StartAt": "Try",
  "States": {
    "Try": {
      "Type": "Parallel",
      "Branches": [
        {
          "StartAt": "Process Data",
          "States":{
            "Process Data": {
              "Type": "Task",
              "Resource": "${lStep1}",
              "Comment": "Process Data",
              "ResultPath": "$.body.job",
              "Next": "Should_Create_Cluster"
            },
    		    "Should_Create_Cluster": {
    		      "Type": "Choice",
    		      "Choices": [
    		        {
    		          "Variable": "$.body.job.jobDetails.createCluster",
    		          "StringEquals": "true",
    		          "Next": "Create_A_Cluster"
    		        },
    		        {
    		          "Variable": "$.body.job.jobDetails.createCluster",
    		          "StringEquals": "false",
    		          "Next": "Enable_Termination_Protection"
    		        }
    		      ],
    		      "Default": "Create_A_Cluster"
    		    },
    		    "Create_A_Cluster": {
    		      "Type": "Task",
    		      "Resource": "arn:aws:states:::elasticmapreduce:createCluster.sync",
    		      "Parameters": {
    		        "Name": "WorkflowCluster",
    		        "VisibleToAllUsers": true,
    		        "ReleaseLabel": "emr-5.28.0",
    		        "Applications": [{ "Name": "Hive" }, { "Name": "Spark" }],
    		        "ServiceRole": "EMR_DefaultRole",
    		        "JobFlowRole": "EMR_EC2_DefaultRole",
    		        "LogUri.$": "$.body.job.jobDetails.logUri",
    		        "BootstrapActions": [
    		            {
    		               "Name": "Loading Deequ",
    		               "ScriptBootstrapAction": {
    		                  "Path.$": "$.body.job.jobDetails.bootstrapActions"
    		               }
    		            }
    		        ],
    		        "Instances": {
    		          "KeepJobFlowAliveWhenNoSteps": true,
    		          "InstanceFleets": [
    		            {
    		              "InstanceFleetType": "MASTER",
    		              "TargetOnDemandCapacity": 1,
    		              "InstanceTypeConfigs": [
    		                {
    		                  "InstanceType": "m4.xlarge"
    		                }
    		              ]
    		            },
    		            {
    		              "InstanceFleetType": "CORE",
    		              "TargetOnDemandCapacity": 1,
    		              "InstanceTypeConfigs": [
    		                {
    		                  "InstanceType": "m4.xlarge"
    		                }
    		              ]
    		            }
    		          ]
    		        }
    		      },
    		      "ResultPath": "$.body.job.jobDetails.cluster",
    		      "Next": "Enable_Termination_Protection"
    		    },
    		    "Enable_Termination_Protection": {
    		      "Type": "Task",
    		      "Resource": "arn:aws:states:::elasticmapreduce:setClusterTerminationProtection",
    		      "Parameters": {
    		        "ClusterId.$": "$.body.job.jobDetails.cluster.ClusterId",
    		        "TerminationProtected": true
    		      },
    		      "ResultPath": null,
    		      "Next": "Add_Steps_Parallel"
    		    },
    		    "Add_Steps_Parallel": {
    		      "Type": "Parallel",
    		      "Branches": [
    		        {
    		          "StartAt": "Step_One",
    		          "States": {
    		            "Step_One": {
    		              "Type": "Task",
    		              "Resource": "arn:aws:states:::elasticmapreduce:addStep.sync",
    		              "Parameters": {
    		                "ClusterId.$": "$.body.job.jobDetails.cluster.ClusterId",
    		                "Step": {
    		                  "Name": "The first step",
    		                  "ActionOnFailure": "CONTINUE",
    		                  "HadoopJarStep": {
    		                    "Jar": "command-runner.jar",
    		                    "Args.$": "$.body.job.jobDetails.step1"
    		                  }
    		                }
    		              },
    		              "End": true
    		            }
    		          }
    		        },
    		        {
    		          "StartAt": "Wait_10_Seconds",
    		          "States": {
    		            "Wait_10_Seconds": {
    		              "Type": "Wait",
    		              "Seconds": 10,
    		              "Next": "Step_Two (async)"
    		            },
    		            "Step_Two (async)": {
    		              "Type": "Task",
    		              "Resource": "arn:aws:states:::elasticmapreduce:addStep",
    		              "Parameters": {
    		                "ClusterId.$": "$.body.job.jobDetails.cluster.ClusterId",
    		                "Step": {
    		                  "Name": "The second step",
    		                  "ActionOnFailure": "CONTINUE",
    		                  "HadoopJarStep": {
    		                    "Jar": "command-runner.jar",
    		                    "Args.$": "$.body.job.jobDetails.step2"
    		                  }
    		                }
    		              },
    		              "ResultPath": "$.body.job.jobDetails.cluster.addStepsResult",
    		              "Next": "Wait_Another_10_Seconds"
    		            },
    		            "Wait_Another_10_Seconds": {
    		              "Type": "Wait",
    		              "Seconds": 10,
    		              "Next": "Cancel_Step_Two"
    		            },
    		            "Cancel_Step_Two": {
    		              "Type": "Task",
    		              "Resource": "arn:aws:states:::elasticmapreduce:cancelStep",
    		              "Parameters": {
    		                "ClusterId.$": "$.body.job.jobDetails.cluster.ClusterId",
    		                "StepId.$": "$.body.job.jobDetails.cluster.addStepsResult.StepId"
    		              },
    		              "End": true
    		            }
    		          }
    		        }
    		      ],
    		      "ResultPath": null,
    		      "Next": "Step_Three"
    		    },
    		    "Step_Three": {
    		      "Type": "Task",
    		      "Resource": "arn:aws:states:::elasticmapreduce:addStep.sync",
    		      "Parameters": {
    		        "ClusterId.$": "$.body.job.jobDetails.cluster.ClusterId",
    		        "Step": {
    		          "Name": "The third step",
    		          "ActionOnFailure": "CONTINUE",
    		          "HadoopJarStep": {
    		                    "Jar": "command-runner.jar",
    		                    "Args.$": "$.body.job.jobDetails.step3"
    		                  }
    		        }
    		      },
    		      "ResultPath": null,
    		      "Next": "Disable_Termination_Protection"
    		    },
    		    "Disable_Termination_Protection": {
    		      "Type": "Task",
    		      "Resource": "arn:aws:states:::elasticmapreduce:setClusterTerminationProtection",
    		      "Parameters": {
    		        "ClusterId.$": "$.body.job.jobDetails.cluster.ClusterId",
    		        "TerminationProtected": false
    		      },
    		      "ResultPath": null,
    		      "Next": "Should_Terminate_Cluster"
    		    },
    		    "Should_Terminate_Cluster": {
    		      "Type": "Choice",
    		      "Choices": [
    		        {
    		          "Variable": "$.body.job.jobDetails.terminateCluster",
    		          "StringEquals": "true",
    		          "Next": "Terminate_Cluster"
    		        },
    		        {
    		          "Variable": "$.body.job.jobDetails.terminateCluster",
    		          "StringEquals": "false",
    		          "Next": "Run Glue Crawler"
    		        }
    		      ],
    		      "Default": "Terminate_Cluster"
    		    },
    		    "Terminate_Cluster": {
    		      "Type": "Task",
    		      "Resource": "arn:aws:states:::elasticmapreduce:terminateCluster.sync",
    		      "Parameters": {
    		        "ClusterId.$": "$.body.job.jobDetails.cluster.ClusterId"
    		      },
    		      "ResultPath": "$.body.job.jobDetails.clusterTermination",
    		      "Next": "Run Glue Crawler"
    		    },
            "Run Glue Crawler": {
              "Type": "Task",
              "Resource": "${lStep2}",
              "Comment": "Run Glue Crawler",
              "ResultPath": "$.statusCode",
              "Next": "Post-update Comprehensive Catalogue"
            },
            "Post-update Comprehensive Catalogue": {
              "Type": "Task",
              "Resource": "${lStep3}",
              "Comment": "Post-update Comprehensive Catalogue",
              "ResultPath": "$.statusCode",
              "End": true
            }
          }
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [ "States.ALL" ],
          "ResultPath": null,
          "Next": "Error"
        }
      ],
      "Next": "Done"
    },
    "Done": {
      "Type": "Succeed"
    },
    "Error": {
      "Type": "Task",
      "Resource": "${lError}",
      "Comment": "Send Original Payload to DLQ",
      "Next": "Failed"
    },
    "Failed": {
      "Type": "Fail"
    }
  }
}