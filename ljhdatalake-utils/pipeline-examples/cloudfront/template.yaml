AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: Contains StageB StateMachine Definition

Parameters:
  pArtifactBucket:
    Description: Name of the artifactory bucket
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/S3/ArtifactsBucket
  pDatasetBucket:
    Description: The dataset bucket
    Type: String
  pStageBucket:
    Description: The stage bucket
    Type: String
  pApp:
    Description: Name of the application (all lowercase, no symbols or spaces)
    Type: String
    AllowedPattern: "[a-z0-9]*"
  pOrg:
    Description: Name of the organization (all lowercase, no symbols or spaces)
    Type: String
    AllowedPattern: "[a-z0-9]*"
  pTeamName:
    Description: Name of the team owning the pipeline (all lowercase, no symbols or spaces)
    Type: String
    AllowedPattern: "[a-z0-9]*"
  pPermissionsBoundaryManagedPolicy:
    Description: The permissions boundary IAM Managed policy for the team
    Type: String
  pPipeline:
    Description: The name of the pipeline (all lowercase, no symbols or spaces)
    Type: String
    AllowedPattern: "[a-z0-9]*"
  pEnv:
    Description: The name of the environment to deploy the dataset to
    Type: String
    Default: dev
    AllowedValues: [dev, test, prod]
  pKMSInfraKeyId:
    Description: The team infrastructure KMS key
    Type: String
  pKMSDataKeyId:
    Description: The team data KMS key
    Type: String
  pDatalakeLibLayer:
    Type: AWS::SSM::Parameter::Value<String>
    Description: The ARN of the latest Datalake Library Lambda Layer
  pPipLibLayer:
    Type: AWS::SSM::Parameter::Value<String>
    Description: The ARN of the latest Pip Library Lambda Layer
  pElasticSearchEnabled:
    Description: Boolean for wether ElasticSearch is enabled
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/ElasticSearch/Enabled
  pUpdateSubscriptionLambda:
    Description: ARN of the Lambda function used by the Custom Resource to update CloudWatch subscription filters
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/Lambda/UpdateCloudWatchSubscriptionFilterFunctionArn
  pKibanaFunction:
    Description: ARN of the Lambda function that collates logs
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/Lambda/KibanaLambdaArn
  pStatesExecutionRole:
    Type: AWS::SSM::Parameter::Value<String>
    Description: The ARN of the States Execution Role
  pSNSTopic:
    Description: The team SNS topic
    Type: String
  pCloudWatchLogsRetentionInDays:
    Description: The number of days log events are kept in CloudWatch Logs
    Type: Number
    Default: 30
    AllowedValues:
      [
        1,
        3,
        5,
        7,
        14,
        30,
        60,
        90,
        120,
        150,
        180,
        365,
        400,
        545,
        731,
        1827,
        3653,
      ]

Conditions:
  DeployElasticSearch: !Equals [!Ref pElasticSearchEnabled, "true"]

Globals:
  Function:
    Runtime: python3.7
    Handler: lambda_function.lambda_handler
    Layers:
      - !Ref pDatalakeLibLayer
    KmsKeyArn: !Ref pKMSInfraKeyId

Resources:
  ######## IAM #########
  # Common policy
  rLambdaCommonPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub sdlf-${pTeamName}-${pPipeline}-common-b
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
            Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*
          - Effect: Allow
            Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/sdlf-${pTeamName}-*
          - Effect: Allow
            Action:
              - ssm:GetParameter
              - ssm:GetParameters
            Resource: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/SDLF/*
          - Effect: Allow
            Action:
              - dynamodb:BatchGetItem
              - dynamodb:BatchWriteItem
              - dynamodb:DeleteItem
              - dynamodb:DescribeTable
              - dynamodb:GetItem
              - dynamodb:GetRecords
              - dynamodb:PutItem
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:UpdateItem
            Resource:
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/octagon-*
          - Effect: Allow
            Action:
              - kms:CreateGrant
              - kms:Decrypt
              - kms:DescribeKey
              - kms:Encrypt
              - kms:GenerateDataKey*
              - kms:ReEncrypt*
            Resource:
              - !Ref pKMSInfraKeyId

  # Routing Step Role
  rRoleLambdaExecutionRoutingStep:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub sdlf-${pTeamName}-${pPipeline}-routing-b
      PermissionsBoundary: !Ref pPermissionsBoundaryManagedPolicy
      ManagedPolicyArns:
        - !Ref rLambdaCommonPolicy
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Path: /state-machine/
      Policies:
        - PolicyName: !Sub sdlf-${pTeamName}-${pPipeline}-routing-b
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - states:StartExecution
                Resource:
                  - !Ref rStateMachine
              - Effect: Allow
                Action:
                  - sqs:DeleteMessage
                  - sqs:DeleteMessageBatch
                  - sqs:GetQueueAttributes
                  - sqs:GetQueueUrl
                  - sqs:ListQueues
                  - sqs:ListDeadLetterSourceQueues
                  - sqs:ListQueueTags
                  - sqs:ReceiveMessage
                  - sqs:SendMessage
                  - sqs:SendMessageBatch
                Resource:
                  - !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:sdlf-${pTeamName}-*

  # Step1 Role
  rRoleLambdaExecutionStep1:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub sdlf-${pTeamName}-${pPipeline}-process-b
      PermissionsBoundary: !Ref pPermissionsBoundaryManagedPolicy
      ManagedPolicyArns:
        - !Ref rLambdaCommonPolicy
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Path: /state-machine/
      Policies:
        - PolicyName: !Sub sdlf-${pTeamName}-${pPipeline}-process-b
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:ListBucket
                Resource:
                  - !Sub arn:aws:s3:::${pDatasetBucket}
                  - !Sub arn:aws:s3:::${pArtifactBucket}
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                Resource:
                  - !Sub arn:aws:s3:::${pDatasetBucket}/${pTeamName}/*
                  - !Sub arn:aws:s3:::${pDatasetBucket}/stage/${pTeamName}/*
                  - !Sub arn:aws:s3:::${pDatasetBucket}/pre-stage/${pTeamName}/*
                  - !Sub arn:aws:s3:::${pDatasetBucket}/post-stage/${pTeamName}/*
                  - !Sub arn:aws:s3:::${pDatasetBucket}/analytics/${pTeamName}/*
                  - !Sub arn:aws:s3:::${pArtifactBucket}/${pTeamName}/*
              - Effect: Allow
                Action:
                  - iam:PassRole
                  - iam:GetRole
                Resource:
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/service-role/*
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/EMR*

  # Step2 Role
  rRoleLambdaExecutionStep2:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub sdlf-${pTeamName}-${pPipeline}-crawl-b
      PermissionsBoundary: !Ref pPermissionsBoundaryManagedPolicy
      ManagedPolicyArns:
        - !Ref rLambdaCommonPolicy
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Path: /state-machine/
      Policies:
        - PolicyName: !Sub sdlf-${pTeamName}-${pPipeline}-crawl-b
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - glue:StartCrawler
                Resource:
                  - !Sub arn:aws:glue:${AWS::Region}:${AWS::AccountId}:crawler/sdlf-${pTeamName}-*

  # Step3 Role
  rRoleLambdaExecutionStep3:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub sdlf-${pTeamName}-${pPipeline}-postupdate-b
      PermissionsBoundary: !Ref pPermissionsBoundaryManagedPolicy
      ManagedPolicyArns:
        - !Ref rLambdaCommonPolicy
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Path: /state-machine/
      Policies:
        - PolicyName: !Sub sdlf-${pTeamName}-${pPipeline}-postupdate-b
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:ListBucket
                Resource:
                  - !Sub arn:aws:s3:::${pDatasetBucket}
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource:
                  - !Sub arn:aws:s3:::${pDatasetBucket}/${pTeamName}/*
                  - !Sub arn:aws:s3:::${pDatasetBucket}/stage/${pTeamName}/*
                  - !Sub arn:aws:s3:::${pDatasetBucket}/pre-stage/${pTeamName}/*
                  - !Sub arn:aws:s3:::${pDatasetBucket}/post-stage/${pTeamName}/*
                  - !Sub arn:aws:s3:::${pDatasetBucket}/analytics/${pTeamName}/*

  # Error Handling Lambda Role
  rRoleLambdaExecutionErrorStep:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub sdlf-${pTeamName}-${pPipeline}-error-b
      PermissionsBoundary: !Ref pPermissionsBoundaryManagedPolicy
      ManagedPolicyArns:
        - !Ref rLambdaCommonPolicy
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Path: /state-machine/
      Policies:
        - PolicyName: !Sub sdlf-${pTeamName}-${pPipeline}-error-b
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - sqs:DeleteMessage
                  - sqs:DeleteMessageBatch
                  - sqs:GetQueueAttributes
                  - sqs:GetQueueUrl
                  - sqs:ListQueues
                  - sqs:ListDeadLetterSourceQueues
                  - sqs:ListQueueTags
                  - sqs:ReceiveMessage
                  - sqs:SendMessage
                  - sqs:SendMessageBatch
                Resource:
                  - !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:sdlf-${pTeamName}-*

  ######## LAMBDA FUNCTIONS #########
  rLambdaRoutingStep:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./lambda/stage-b-routing/src
      FunctionName: !Sub sdlf-${pTeamName}-${pPipeline}-routing-b
      Description: Checks if items are to be processed and route them to state machine
      MemorySize: 256
      Timeout: 300
      Role: !GetAtt rRoleLambdaExecutionRoutingStep.Arn

  rLambdaRedriveStep:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./lambda/stage-b-redrive/src
      FunctionName: !Sub sdlf-${pTeamName}-${pPipeline}-redrive-b
      Environment:
        Variables:
          TEAM: !Ref pTeamName
          PIPELINE: !Ref pPipeline
          STAGE: StageB
      Description: Redrives Failed messages to the routing queue
      MemorySize: 256
      Timeout: 300
      Role: !GetAtt rRoleLambdaExecutionRoutingStep.Arn

  rLambdaStep1:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./lambda/stage-b-process-data/src
      FunctionName: !Sub sdlf-${pTeamName}-${pPipeline}-process-b
      Description: Processing pipeline
      MemorySize: 1536
      Timeout: 900
      Role: !GetAtt rRoleLambdaExecutionStep1.Arn

  rLambdaStep2:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./lambda/stage-b-crawl-data/src
      FunctionName: !Sub sdlf-${pTeamName}-${pPipeline}-crawl-b
      Description: Glue crawler
      MemorySize: 512
      Timeout: 300
      Role: !GetAtt rRoleLambdaExecutionStep2.Arn

  rLambdaStep3:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./lambda/stage-b-postupdate-metadata/src
      FunctionName: !Sub sdlf-${pTeamName}-${pPipeline}-postupdate-b
      Description: Post-Update the metadata in the DynamoDB Catalog table
      MemorySize: 512
      Timeout: 600
      Role: !GetAtt rRoleLambdaExecutionStep3.Arn

  rLambdaErrorStep:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./lambda/stage-b-error/src
      FunctionName: !Sub sdlf-${pTeamName}-${pPipeline}-error-b
      Description: Fallback lambda to handle messages which failed processing
      MemorySize: 256
      Timeout: 300
      Role: !GetAtt rRoleLambdaExecutionErrorStep.Arn

  ######## CLOUDWATCH #########
  rLambdaRoutingStepLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${rLambdaRoutingStep}
      RetentionInDays: !Ref pCloudWatchLogsRetentionInDays
      KmsKeyId: !Ref pKMSInfraKeyId

  rUpdateSubscriptionFilterRoutingStep:
    Type: Custom::UpdateSubscriptionFilter
    Condition: DeployElasticSearch
    Version: 0.1
    Properties:
      ServiceToken: !Ref pUpdateSubscriptionLambda
      LogGroupName: !Ref rLambdaRoutingStepLogGroup
      DestinationArn: !Ref pKibanaFunction
      FilterPattern: "[log_type, log_timestamp, log_id, log_message]"

  rLambdaRoutingStepCloudWatchAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub sdlf-${pTeamName}-${pPipeline}-routing-b
      AlarmDescription: !Sub StageB ${pTeamName} ${pPipeline} Routing Lambda Alarm
      AlarmActions:
        - !Ref pSNSTopic
      MetricName: Errors
      EvaluationPeriods: 5
      Period: 300
      ComparisonOperator: GreaterThanThreshold
      Namespace: AWS/Lambda
      Statistic: Sum
      Threshold: 1
      Unit: Count
      Dimensions:
        - Name: FunctionName
          Value: !Ref rLambdaRoutingStep

  rLambdaRedriveStepLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${rLambdaRedriveStep}
      RetentionInDays: !Ref pCloudWatchLogsRetentionInDays
      KmsKeyId: !Ref pKMSInfraKeyId

  rUpdateSubscriptionFilterRedriveStep:
    Type: Custom::UpdateSubscriptionFilter
    Condition: DeployElasticSearch
    Version: 0.1
    Properties:
      ServiceToken: !Ref pUpdateSubscriptionLambda
      LogGroupName: !Ref rLambdaRedriveStepLogGroup
      DestinationArn: !Ref pKibanaFunction
      FilterPattern: "[log_type, log_timestamp, log_id, log_message]"

  rLambdaStep1LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${rLambdaStep1}
      RetentionInDays: !Ref pCloudWatchLogsRetentionInDays
      KmsKeyId: !Ref pKMSInfraKeyId

  rUpdateSubscriptionFilterStep1:
    Type: Custom::UpdateSubscriptionFilter
    Condition: DeployElasticSearch
    Version: 0.1
    Properties:
      ServiceToken: !Ref pUpdateSubscriptionLambda
      LogGroupName: !Ref rLambdaStep1LogGroup
      DestinationArn: !Ref pKibanaFunction
      FilterPattern: "[log_type, log_timestamp, log_id, log_message]"

  rLambdaStep2LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${rLambdaStep2}
      RetentionInDays: !Ref pCloudWatchLogsRetentionInDays
      KmsKeyId: !Ref pKMSInfraKeyId

  rUpdateSubscriptionFilterStep2:
    Type: Custom::UpdateSubscriptionFilter
    Condition: DeployElasticSearch
    Version: 0.1
    Properties:
      ServiceToken: !Ref pUpdateSubscriptionLambda
      LogGroupName: !Ref rLambdaStep2LogGroup
      DestinationArn: !Ref pKibanaFunction
      FilterPattern: "[log_type, log_timestamp, log_id, log_message]"

  rLambdaStep3LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${rLambdaStep3}
      RetentionInDays: !Ref pCloudWatchLogsRetentionInDays
      KmsKeyId: !Ref pKMSInfraKeyId

  rUpdateSubscriptionFilterStep3:
    Type: Custom::UpdateSubscriptionFilter
    Condition: DeployElasticSearch
    Version: 0.1
    Properties:
      ServiceToken: !Ref pUpdateSubscriptionLambda
      LogGroupName: !Ref rLambdaStep3LogGroup
      DestinationArn: !Ref pKibanaFunction
      FilterPattern: "[log_type, log_timestamp, log_id, log_message]"

  rLambdaErrorStepLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${rLambdaErrorStep}
      RetentionInDays: !Ref pCloudWatchLogsRetentionInDays
      KmsKeyId: !Ref pKMSInfraKeyId

  rUpdateSubscriptionFilterErrorStep:
    Type: Custom::UpdateSubscriptionFilter
    Condition: DeployElasticSearch
    Version: 0.1
    Properties:
      ServiceToken: !Ref pUpdateSubscriptionLambda
      LogGroupName: !Ref rLambdaErrorStepLogGroup
      DestinationArn: !Ref pKibanaFunction
      FilterPattern: "[log_type, log_timestamp, log_id, log_message]"

  rLambdaErrorStepCloudWatchAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub sdlf-${pTeamName}-${pPipeline}-error-b
      AlarmDescription: !Sub StageB ${pTeamName} ${pPipeline} Error Lambda Alarm
      AlarmActions:
        - !Ref pSNSTopic
      MetricName: Invocations
      EvaluationPeriods: 5
      Period: 300
      ComparisonOperator: GreaterThanThreshold
      Namespace: AWS/Lambda
      Statistic: Sum
      Threshold: 1
      Unit: Count
      Dimensions:
        - Name: FunctionName
          Value: !Ref rLambdaErrorStep

  rStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Name: !Sub sdlf-${pTeamName}-${pPipeline}-sm-b
      DefinitionUri: ./state-machine/stage-b.asl.json
      DefinitionSubstitutions:
        lStep1: !GetAtt rLambdaStep1.Arn
        lStep2: !GetAtt rLambdaStep2.Arn
        lStep3: !GetAtt rLambdaStep3.Arn
        lError: !GetAtt rLambdaErrorStep.Arn
      Role: !Ref pStatesExecutionRole

  ######## SSM OUTPUTS #########
  rStateMachineSsm:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /SDLF/SM/${pTeamName}/${pPipeline}StageBSM
      Type: String
      Value: !Ref rStateMachine
      Description: !Sub "ARN of the StageB ${pTeamName} ${pPipeline} State Machine"
