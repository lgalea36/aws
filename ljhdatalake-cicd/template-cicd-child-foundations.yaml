AWSTemplateFormatVersion: 2010-09-09
Description: Multi-environment CICD foundations resources in child account

Parameters:
  pDemo:
    Description: Deploying demo
    Type: String
    AllowedValues: ["false", "true"]
    Default: "false"
  pEnvironment:
    Description: Environment name
    Type: String
    Default: dev
    AllowedValues: [dev, test, prod]
  pSharedDevOpsAccountId:
    Description: Shared DevOps AWS account ID
    Type: String
    AllowedPattern: (\d{12}|^$)
    ConstraintDescription: Must be an AWS account ID
  pSharedDevOpsAccountKmsKeyArn:
    Description: Arn of the KMS key in the Shared DevOps account
    Type: String
  pFoundationsRepository:
    Type: String
    Default: ljhdatalake-foundations
  pTeamFoundationsRepository:
    Type: String
    Default: ljhdatalake-team

Mappings:
  pCodeCommitBranch:
    dev:
      branch: dev
    test:
      branch: test
    prod:
      branch: master
  pDemoMode:
    "true":
      state: DISABLED
    "false":
      state: ENABLED

Conditions:
  CrossAccount:
    !Not [!Equals [!Ref pSharedDevOpsAccountId, !Ref "AWS::AccountId"]]

Resources:
  ######## S3 #########
  rArtifactsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ljhdatalake-cfn-artifacts-${AWS::Region}-${AWS::AccountId}
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True

  rArtifactsBucketPolicy:
    Condition: CrossAccount
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref rArtifactsBucket
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${pSharedDevOpsAccountId}:root
            Action:
              - s3:GetBucketLocation
              - s3:ListBucket
            Resource:
              - !Sub arn:aws:s3:::${rArtifactsBucket}
          - Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${pSharedDevOpsAccountId}:root
            Action:
              - s3:Get*
              - s3:PutObject
            Resource:
              - !Sub arn:aws:s3:::${rArtifactsBucket}/*
          - Effect: Deny
            Principal: "*"
            Action: s3:*
            Resource:
              - !Sub arn:aws:s3:::${rArtifactsBucket}/*
              - !Sub arn:aws:s3:::${rArtifactsBucket}
            Condition:
              Bool:
                aws:SecureTransport: False

  ######## IAM #########
  rCodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ljhdatalake-cicd-codebuild
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: ljhdatalake-cicd-codebuild
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: !Sub arn:aws:iam::${pSharedDevOpsAccountId}:role/ljhdatalake-cicd-foundations-codecommit-${pEnvironment}
                Effect: Allow
                Action: sts:AssumeRole
              - Resource:
                  - !Sub arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/ljhdatalake-*
                  - !Sub arn:aws:cloudformation:${AWS::Region}:aws:transform/*
                Effect: Allow
                Action:
                  - cloudformation:CreateChangeSet
                  - cloudformation:CreateStack
                  - cloudformation:DeleteChangeSet
                  - cloudformation:DeleteStack
                  - cloudformation:DescribeChangeSet
                  - cloudformation:DescribeStacks
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:SetStackPolicy
                  - cloudformation:UpdateStack
              - Resource: "*"
                Effect: Allow
                Action:
                  - cloudformation:GetTemplate
                  - cloudformation:GetTemplateSummary
                  - cloudformation:ListStacks
                  - cloudformation:ValidateTemplate
              - Resource: !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/octagon-*
                Effect: Allow
                Action:
                  - dynamodb:CreateTable
                  - dynamodb:DeleteTable
                  - dynamodb:DescribeTable
                  - dynamodb:DescribeTimeToLive
                  - dynamodb:ListTagsOfResource
                  - dynamodb:TagResource
                  - dynamodb:UntagResource
                  - dynamodb:UpdateTable
                  - dynamodb:UpdateTimeToLive
                  - dynamodb:DescribeContinuousBackups
                  - dynamodb:UpdateContinuousBackups
              - Resource: !Sub arn:aws:events:${AWS::Region}:${AWS::AccountId}:rule/ljhdatalake-*
                Effect: Allow
                Action:
                  - events:DeleteRule
                  - events:DescribeRule
                  - events:DisableRule
                  - events:EnableRule
                  - events:PutRule
                  - events:PutTargets
                  - events:RemoveTargets
              - Resource: !Sub arn:aws:iam::${AWS::AccountId}:role/*
                Effect: Allow
                Action: iam:PassRole
                Condition:
                  StringEqualsIfExists:
                    iam:PassedToService:
                      - cloudformation.amazonaws.com
                      - codebuild.amazonaws.com
                      - codepipeline.amazonaws.com
                      - lambda.amazonaws.com
              - Resource: "*"
                Effect: Allow
                Action:
                  - iam:GetRole
                  - iam:GetRolePolicy
                  - iam:ListPolicies
                  - iam:ListPolicyVersions
                  - iam:ListRoles
                  - iam:ListRolePolicies
              - Resource: !Sub arn:aws:iam::${pSharedDevOpsAccountId}:role/ljhdatalake-cicd-team-codecommit-${pEnvironment}-*
                Effect: Allow
                Action: iam:PassRole
              - Resource:
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/ljhdatalake-*
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/aws-service-role/*
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/service-role/*
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/state-machine/ljhdatalake-*
                Effect: Allow
                Action:
                  - iam:AttachRolePolicy
                  - iam:CreateRole
                  - iam:CreateServiceLinkedRole
                  - iam:DeleteRole
                  - iam:DeleteRolePolicy
                  - iam:DetachRolePolicy
                  - iam:PassRole
                  - iam:PutRolePolicy
                  - iam:TagRole
                  - iam:UntagRole
                  - iam:UpdateRole
                  - iam:UpdateRoleDescription
              - Resource: !Sub arn:aws:iam::${AWS::AccountId}:policy/ljhdatalake-*
                Effect: Allow
                Action:
                  - iam:CreatePolicy
                  - iam:CreatePolicyVersion
                  - iam:DeletePolicy
                  - iam:DeletePolicyVersion
                  - iam:GetPolicy
                  - iam:GetPolicyVersion
              - Resource: "*"
                Effect: "Allow"
                Action: lambda:ListFunctions
              - Resource: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:ljhdatalake-*
                Effect: Allow
                Action:
                  - lambda:AddPermission
                  - lambda:CreateAlias
                  - lambda:CreateFunction
                  - lambda:DeleteFunction
                  - lambda:DeleteFunctionConcurrency
                  - lambda:DeleteLayerVersion
                  - lambda:GetFunction
                  - lambda:GetFunctionConfiguration
                  - lambda:GetLayerVersion
                  - lambda:InvokeFunction
                  - lambda:ListFunctions
                  - lambda:ListLayers
                  - lambda:ListLayerVersions
                  - lambda:ListTags
                  - lambda:PublishVersion
                  - lambda:PutFunctionConcurrency
                  - lambda:RemovePermission
                  - lambda:RevokePermission
                  - lambda:TagResource
                  - lambda:UntagResource
                  - lambda:UpdateAlias
                  - lambda:UpdateFunctionCode
                  - lambda:UpdateFunctionConfiguration
              - Resource: "*"
                Effect: "Allow"
                Action:
                  - lambda:CreateEventSourceMapping
                  - lambda:GetEventSourceMapping
                  - lambda:UpdateEventSourceMapping
                  - lambda:DeleteEventSourceMapping
              - Resource: "*"
                Effect: Allow
                Action:
                  - states:CreateStateMachine
                  - states:ListStateMachines
                  - states:TagResource
                  - states:UntagResource
              - Resource: !Sub "arn:aws:states:${AWS::Region}:${AWS::AccountId}:stateMachine:ljhdatalake-*"
                Effect: Allow
                Action:
                  - states:DeleteStateMachine
                  - states:DescribeStateMachine
                  - states:UpdateStateMachine
              - Resource: "*"
                Effect: "Allow"
                Action:
                  - logs:CreateLogGroup
                  - logs:DescribeLogGroups
              - Resource:
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:ljhdatalake-*:log-stream:*
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/ljhdatalake-*:log-stream:*
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/ljhdatalake-*:log-stream:*
                Effect: Allow
                Action:
                  - logs:PutRetentionPolicy
                  - logs:CreateLogStream
                  - logs:DeleteLogGroup
                  - logs:DeleteLogStream
                  - logs:DescribeLogStreams
                  - logs:PutLogEvents
                  - logs:TagLogGroup
                  - logs:UntagLogGroup
              - Resource: !Sub arn:aws:cloudwatch:${AWS::Region}:${AWS::AccountId}:alarm:ljhdatalake-*
                Effect: Allow
                Action:
                  - cloudwatch:DeleteAlarms
                  - cloudwatch:DescribeAlarms
                  - cloudwatch:DisableAlarmActions
                  - cloudwatch:EnableAlarmActions
                  - cloudwatch:GetMetricData
                  - cloudwatch:PutMetricAlarm
                  - cloudwatch:PutMetricData
                  - cloudwatch:SetAlarmState
              - Resource: !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:*
                Effect: Allow
                Action: sns:ListTopics
              - Resource: !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:ljhdatalake-*
                Effect: Allow
                Action:
                  - sns:CreateTopic
                  - sns:DeleteTopic
                  - sns:GetTopicAttributes
                  - sns:Publish
                  - sns:SetTopicAttributes
                  - sns:Subscribe
                  - sns:Unsubscribe
              - Resource: "*"
                Effect: Allow
                Action:
                  - s3:CreateBucket
                  - s3:DeleteBucket
                  - s3:DeleteBucketPolicy
                  - s3:Get*
                  - s3:List*
                  - s3:Put*
                  - s3:SetBucketEncryption
              - Resource: !Sub arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/ljhdatalake-*
                Effect: Allow
                Action:
                  - codebuild:BatchGetProjects
                  - codebuild:BatchGetBuilds
                  - codebuild:CreateProject
                  - codebuild:DeleteProject
                  - codebuild:UpdateProject
              - Resource: !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:ljhdatalake-*
                Effect: Allow
                Action:
                  - codepipeline:CreatePipeline
                  - codepipeline:DeletePipeline
                  - codepipeline:GetPipelineState
                  - codepipeline:GetPipeline
                  - codepipeline:UpdatePipeline
              - Resource: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:*
                Effect: Allow
                Action: sqs:ListQueues
              - Resource: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:ljhdatalake-*
                Effect: Allow
                Action:
                  - sqs:AddPermission
                  - sqs:CreateQueue
                  - sqs:ChangeMessageVisibility
                  - sqs:ChangeMessageVisibilityBatch
                  - sqs:DeleteQueue
                  - sqs:GetQueueAttributes
                  - sqs:GetQueueUrl
                  - sqs:ListQueues
                  - sqs:ListQueueTags
                  - sqs:RemovePermission
                  - sqs:SendMessage
                  - sqs:SendMessageBatch
                  - sqs:SetQueueAttributes
                  - sqs:TagQueue
                  - sqs:UntagQueue
              - Resource: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/ljhdatalake/*
                Effect: Allow
                Action:
                  - ssm:AddTagsToResource
                  - ssm:DeleteParameter
                  - ssm:DeleteParameters
                  - ssm:DescribeParameters
                  - ssm:GetOpsSummary
                  - ssm:GetParameter
                  - ssm:GetParameterHistory
                  - ssm:GetParameters
                  - ssm:GetParametersByPath
                  - ssm:ListTagsForResource
                  - ssm:PutParameter
                  - ssm:RemoveTagsFromResource
              - Resource: "*"
                Effect: Allow
                Action:
                  - lakeformation:DeregisterResource
                  - lakeformation:GetDataAccess
                  - lakeformation:GrantPermissions
                  - lakeformation:PutDataLakeSettings
                  - lakeformation:RegisterResource
                  - lakeformation:RevokePermissions
                  - lakeformation:UpdateResource
              - Resource: "*"
                Effect: Allow
                Action:
                  - cloudtrail:DescribeTrails
              - Resource: !Sub arn:aws:cloudtrail:${AWS::Region}:${AWS::AccountId}:trail/ljhdatalake-*
                Effect: Allow
                Action:
                  - cloudtrail:AddTags
                  - cloudtrail:CreateTrail
                  - cloudtrail:DeleteTrail
                  - cloudtrail:ListTags
                  - cloudtrail:PutEventSelectors
                  - cloudtrail:RemoveTags
                  - cloudtrail:StartLogging
                  - cloudtrail:StopLogging
                  - cloudtrail:UpdateTrail
              - Resource: "*"
                Effect: Allow
                Action:
                  - kms:CreateAlias
                  - kms:CreateKey
                  - kms:DeleteAlias
                  - kms:ListAliases
                  - kms:ListGrants
                  - kms:ListKeyPolicies
                  - kms:ListKeys
                  - kms:ListResourceTags
                  - kms:UpdateAlias
              - Resource:
                  - !Sub arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/*
                  - !Sub arn:aws:kms:${AWS::Region}:${pSharedDevOpsAccountId}:key/*
                Effect: Allow
                Action:
                  - kms:CreateGrant
                  - kms:Decrypt
                  - kms:DescribeKey
                  - kms:DisableKey
                  - kms:DisableKeyRotation
                  - kms:EnableKey
                  - kms:EnableKeyRotation
                  - kms:Encrypt
                  - kms:GenerateDataKey
                  - kms:GetKeyPolicy
                  - kms:PutKeyPolicy
                  - kms:ReEncryptFrom
                  - kms:ReEncryptTo
                  - kms:RetireGrant
                  - kms:RevokeGrant
                  - kms:ScheduleKeyDeletion
                  - kms:TagResource
                  - kms:UntagResource
                  - kms:UpdateKeyDescription
              - Resource: "*"
                Effect: Allow
                Action:
                  - elasticmapreduce:AddTags
                  - elasticmapreduce:CreateSecurityConfiguration
                  - elasticmapreduce:DeleteSecurityConfiguration
                  - elasticmapreduce:DescribeSecurityConfiguration
                  - elasticmapreduce:ListSecurityConfigurations
                  - elasticmapreduce:RemoveTags
              - Resource: "*"
                Effect: Allow
                Action:
                  - glue:CreateCrawler
                  - glue:CreateDatabase
                  - glue:CreateJob
                  - glue:CreateSecurityConfiguration
                  - glue:DeleteCrawler
                  - glue:DeleteDatabase
                  - glue:DeleteJob
                  - glue:DeleteSecurityConfiguration
                  - glue:Get*
                  - glue:PutDataCatalogEncryptionSettings
                  - glue:SearchTables
                  - glue:StopCrawler
                  - glue:TagResource
                  - glue:UntagResource
                  - glue:UpdateCrawler
                  - glue:UpdateDatabase
                  - glue:UpdateJob
              - Resource: !Sub arn:aws:es:${AWS::Region}:${AWS::AccountId}:domain/*
                Effect: Allow
                Action:
                  - es:AddTags
                  - es:ListDomainNames
                  - es:ListTags
                  - es:RemoveTags
              - Resource: !Sub arn:aws:es:${AWS::Region}:${AWS::AccountId}:domain/ljhdatalake
                Effect: Allow
                Action:
                  - es:CreateElasticsearchDomain
                  - es:DescribeElasticsearchDomain
                  - es:DeleteElasticsearchDomain
                  - es:UpdateElasticsearchDomainConfig
              - Resource: "*"
                Effect: Allow
                Action:
                  - cognito-identity:CreateIdentityPool
                  - cognito-identity:DeleteIdentityPool
                  - cognito-identity:DescribeIdentityPool
                  - cognito-identity:GetIdentityPoolRoles
                  - cognito-identity:UpdateIdentityPool
                  - cognito-identity:SetIdentityPoolRoles
                  - cognito-idp:AdminCreateUser
                  - cognito-idp:AdminDeleteUser
                  - cognito-idp:CreateGroup
                  - cognito-idp:CreateResourceServer
                  - cognito-idp:CreateUserPool
                  - cognito-idp:CreateUserPoolClient
                  - cognito-idp:CreateUserPoolDomain
                  - cognito-idp:DeleteGroup
                  - cognito-idp:DeleteUserPool
                  - cognito-idp:DeleteUserPoolClient
                  - cognito-idp:UpdateGroup
                  - cognito-idp:UpdateUserPool
                  - cognito-idp:UpdateUserPoolClient

  rCodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ljhdatalake-cicd-codepipeline
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: ljhdatalake-cicd-codepipeline
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource:
                  - !Sub arn:aws:s3:::${rArtifactsBucket}
                  - !Sub arn:aws:s3:::${rArtifactsBucket}/*
                Effect: Allow
                Action:
                  - s3:Get*
                  - s3:ListBucket*
                  - s3:Put*
              - Resource: !Ref pSharedDevOpsAccountKmsKeyArn
                Effect: Allow
                Action:
                  - kms:Decrypt
                  - kms:Describe*
                  - kms:Encrypt
                  - kms:GenerateDataKey*
                  - kms:List*
                  - kms:ReEncrypt*
              - Resource:
                  - !GetAtt rFoundationsCodeBuildProject.Arn
                  - !GetAtt rTeamCodeBuildProject.Arn
                Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
              - Resource: !Sub arn:aws:iam::${pSharedDevOpsAccountId}:role/ljhdatalake-cicd-foundations-codecommit-${pEnvironment}
                Effect: Allow
                Action: sts:AssumeRole

  rCloudWatchRepositoryTriggerRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ljhdatalake-cicd-cw-trigger
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: ljhdatalake-cicd-cw-trigger
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: codepipeline:StartPipelineExecution
                Resource:
                  - !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${rFoundationsCodePipeline}
                  - !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${rTeamCodePipeline}

  # Role defined upstream due to Lake Formation PutDataLakeSettings constraints
  rDataLakeAdminRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ljhdatalake-lakeformation-admin
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
                - glue.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/AWSLakeFormationDataAdmin
      Policies:
        - PolicyName: ljhdatalake-lakeformation-admin
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: CreateLogGroup
                Effect: Allow
                Action:
                  - logs:AssociateKmsKey
                  - logs:CreateLogGroup
                Resource: "*"
              - Sid: CreateLogStream
                Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/ljhdatalake-*
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/glue/*
              - Sid: DynamoDBAccess
                Effect: Allow
                Action:
                  - dynamodb:BatchGetItem
                  - dynamodb:BatchWriteItem
                  - dynamodb:DeleteItem
                  - dynamodb:DescribeTable
                  - dynamodb:GetItem
                  - dynamodb:Query
                  - dynamodb:PutItem
                  - dynamodb:Scan
                  - dynamodb:UpdateItem
                Resource:
                  - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/octagon-*
              - Sid: SSMAccess
                Effect: Allow
                Action:
                  - ssm:GetParameter
                  - ssm:GetParameters
                Resource: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/LJHDATALAKE/IAM/DataLakeAdminRoleArn

  ######## CODEBUILD #########
  rFoundationsCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: ljhdatalake-cicd-foundations-codebuild
      Artifacts:
        Type: CODEPIPELINE
      EncryptionKey: !Ref pSharedDevOpsAccountKmsKeyArn
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
        Type: LINUX_CONTAINER
      ServiceRole: !Ref rCodeBuildRole
      TimeoutInMinutes: 40
      Source:
        Type: CODEPIPELINE
        BuildSpec: |
          version: 0.2
          phases:
            install:
              runtime-versions:
                  python: 3.7
            build:
              commands:
                - echo Configuring AWS credentials
                - echo AWS_CONTAINER_CREDENTIALS_RELATIVE_URI $AWS_CONTAINER_CREDENTIALS_RELATIVE_URI
                - curl -qL -o aws_credentials.json http://169.254.170.2/$AWS_CONTAINER_CREDENTIALS_RELATIVE_URI > aws_credentials.json
                - aws configure set aws_access_key_id `jq -r '.AccessKeyId' aws_credentials.json`
                - aws configure set aws_secret_access_key `jq -r '.SecretAccessKey' aws_credentials.json`
                - aws configure set aws_session_token `jq -r '.Token' aws_credentials.json`
                - |-
                  if  [ "${CODEBUILD_BUILD_NUMBER}" -gt "1" ]; then
                      ./deploy.sh
                  fi
          artifacts:
            files:
              - "*"
              - "**/*"

  rTeamCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: ljhdatalake-cicd-team-codebuild
      Artifacts:
        Type: CODEPIPELINE
      EncryptionKey: !Ref pSharedDevOpsAccountKmsKeyArn
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: ENV
            Type: PLAINTEXT
            Value: !Ref pEnvironment
          - Name: DEVOPS_ACCOUNT_ID
            Value: !Ref pSharedDevOpsAccountId
          - Name: CHILD_ACCOUNT_ID
            Value: !Ref AWS::AccountId
          - Name: CROSS_ACCOUNT_ROLE_ARN
            Value: !Sub arn:aws:iam::${pSharedDevOpsAccountId}:role/ljhdatalake-cicd-foundations-codecommit-${pEnvironment}
      ServiceRole: !Ref rCodeBuildRole
      TimeoutInMinutes: 20
      Source:
        Type: CODEPIPELINE
        BuildSpec: |
          version: 0.2
          phases:
            install:
              runtime-versions:
                  python: 3.7
            build:
              commands:
                - echo Configuring AWS credentials
                - echo AWS_CONTAINER_CREDENTIALS_RELATIVE_URI $AWS_CONTAINER_CREDENTIALS_RELATIVE_URI
                - curl -qL -o aws_credentials.json http://169.254.170.2/$AWS_CONTAINER_CREDENTIALS_RELATIVE_URI > aws_credentials.json
                - aws configure set aws_access_key_id `jq -r '.AccessKeyId' aws_credentials.json`
                - aws configure set aws_secret_access_key `jq -r '.SecretAccessKey' aws_credentials.json`
                - aws configure set aws_session_token `jq -r '.Token' aws_credentials.json`
                - echo "[profile default]\naccount = ${CHILD_ACCOUNT_ID}\nregion = ${AWS_REGION}\noutput = json\n" > ~/.aws/config
                - echo "[profile crossaccount]\naccount = ${DEVOPS_ACCOUNT_ID}\nsource_profile = default\nregion = ${AWS_REGION}\noutput = json\n" >> ~/.aws/config
                - echo "role_arn = ${CROSS_ACCOUNT_ROLE_ARN}" >> ~/.aws/config
                - |-
                  if  [ "${CODEBUILD_BUILD_NUMBER}" -gt "1" ]; then
                      cd scripts && ./team_check.sh
                      cd ../ && ./deploy.sh
                  fi
          artifacts:
            files:
              - "*"
              - "**/*"

  ######## CODEPIPELINE #########
  rFoundationsCodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt rCodePipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: cicd-foundations
              RoleArn: !Sub arn:aws:iam::${pSharedDevOpsAccountId}:role/ljhdatalake-cicd-foundations-codecommit-${pEnvironment}
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: "1"
                Provider: CodeCommit
              OutputArtifacts:
                - Name: Source1
              Configuration:
                RepositoryName: !Ref pFoundationsRepository
                BranchName:
                  !FindInMap [pCodeCommitBranch, !Ref pEnvironment, branch]
                PollForSourceChanges: false
              RunOrder: 1
        - Name: Foundations
          Actions:
            - Name: Build
              InputArtifacts:
                - Name: Source1
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              OutputArtifacts:
                - Name: Source2
              Configuration:
                ProjectName: !Ref rFoundationsCodeBuildProject
              RunOrder: 1
      ArtifactStore:
        Type: S3
        Location: !Ref rArtifactsBucket
        EncryptionKey:
          Id: !Ref pSharedDevOpsAccountKmsKeyArn
          Type: KMS
      Name: ljhdatalake-cicd-foundations

  rTeamCodePipeline:
    DependsOn: rFoundationsCodePipeline
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt rCodePipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: cicd-team
              RoleArn: !Sub arn:aws:iam::${pSharedDevOpsAccountId}:role/ljhdatalake-cicd-foundations-codecommit-${pEnvironment}
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: "1"
                Provider: CodeCommit
              OutputArtifacts:
                - Name: Source1
              Configuration:
                RepositoryName: !Ref pTeamFoundationsRepository
                BranchName:
                  !FindInMap [pCodeCommitBranch, !Ref pEnvironment, branch]
                PollForSourceChanges: false
              RunOrder: 1
        - Name: Team
          Actions:
            - Name: Build
              InputArtifacts:
                - Name: Source1
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              OutputArtifacts:
                - Name: Source2
              Configuration:
                ProjectName: !Ref rTeamCodeBuildProject
              RunOrder: 1
      ArtifactStore:
        Type: S3
        Location: !Ref rArtifactsBucket
        EncryptionKey:
          Id: !Ref pSharedDevOpsAccountKmsKeyArn
          Type: KMS
      Name: ljhdatalake-cicd-team

  ######## EVENTS #########
  rEventBusPolicy:
    Condition: CrossAccount
    Type: AWS::Events::EventBusPolicy
    Properties:
      Action: events:PutEvents
      Principal: !Ref pSharedDevOpsAccountId
      StatementId: ljhdatalake-cicd-eventbus

  rFoundationsCodePipelineTriggerRule:
    Type: AWS::Events::Rule
    Properties:
      State: !FindInMap [pDemoMode, !Ref pDemo, state]
      EventPattern:
        source:
          - aws.codecommit
        detail-type:
          - CodeCommit Repository State Change
        resources:
          - !Sub arn:aws:codecommit:${AWS::Region}:${pSharedDevOpsAccountId}:${pFoundationsRepository}
        detail:
          event:
            - referenceCreated
            - referenceUpdated
          referenceType:
            - branch
          referenceName:
            - !FindInMap [pCodeCommitBranch, !Ref pEnvironment, branch]
      Targets:
        - Arn: !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${rFoundationsCodePipeline}
          RoleArn: !GetAtt rCloudWatchRepositoryTriggerRole.Arn
          Id: ljhdatalake-cicd-foundations

  rTeamCodePipelineTriggerRule:
    Type: AWS::Events::Rule
    Properties:
      State: !FindInMap [pDemoMode, !Ref pDemo, state]
      EventPattern:
        source:
          - aws.codecommit
        detail-type:
          - CodeCommit Repository State Change
        resources:
          - !Sub arn:aws:codecommit:${AWS::Region}:${pSharedDevOpsAccountId}:${pTeamFoundationsRepository}
        detail:
          event:
            - referenceCreated
            - referenceUpdated
          referenceType:
            - branch
          referenceName:
            - !FindInMap [pCodeCommitBranch, !Ref pEnvironment, branch]
      Targets:
        - Arn: !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${rTeamCodePipeline}
          RoleArn: !GetAtt rCloudWatchRepositoryTriggerRole.Arn
          Id: ljhdatalake-cicd-team

  ######## LAKE FORMATION #########
  rDataLakeSettings:
    Type: AWS::LakeFormation::DataLakeSettings
    Properties:
      Admins:
        - DataLakePrincipalIdentifier: !GetAtt rCodeBuildRole.Arn
        - DataLakePrincipalIdentifier: !GetAtt rDataLakeAdminRole.Arn

  ######## SSM #########
  rCFNBucketSsm:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /LJHDATALAKE/S3/CFNBucket
      Type: String
      Value: !Ref rArtifactsBucket
      Description: S3 CFN Artifacts Bucket
  rEnvironmentSsm:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /LJHDATALAKE/Misc/pEnv
      Type: String
      Value: !Ref pEnvironment
      Description: Environment name
  rSharedDevOpsAccountIdSsm:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /LJHDATALAKE/Misc/DevOpsAccountId
      Type: String
      Value: !Ref pSharedDevOpsAccountId
      Description: Shared DevOps Account Id
  rDemoSsm:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /LJHDATALAKE/Misc/Demo
      Type: String
      Value: !Ref pDemo
      Description: DemoMode
  rDataLakeAdminRoleSsm:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /LJHDATALAKE/IAM/DataLakeAdminRoleArn
      Type: String
      Value: !GetAtt rDataLakeAdminRole.Arn
      Description: Lake Formation Data Lake Admin Role
